--------------------------------------------------------
--  File created - Tuesday-April-29-2025   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Sequence BOOKING_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "IM101"."BOOKING_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 3 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence BOOK_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "IM101"."BOOK_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 7 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence BORROW_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "IM101"."BORROW_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 7 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence EQUIP_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "IM101"."EQUIP_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 5 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence LIB_USER_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "IM101"."LIB_USER_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 3 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence NOTIF_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "IM101"."NOTIF_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 5 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence REQ_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "IM101"."REQ_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 3 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence ROOM_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "IM101"."ROOM_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 5 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Sequence SLOT_SEQ
--------------------------------------------------------

   CREATE SEQUENCE  "IM101"."SLOT_SEQ"  MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 11 NOCACHE  NOORDER  NOCYCLE ;
--------------------------------------------------------
--  DDL for Table BOOKS
--------------------------------------------------------

  CREATE TABLE "IM101"."BOOKS" 
   (	"BOOK_ID" NUMBER, 
	"TITLE" VARCHAR2(200 BYTE), 
	"AUTHOR" VARCHAR2(200 BYTE), 
	"PUBLICATION_YEAR" NUMBER(4,0), 
	"GENRE" VARCHAR2(50 BYTE), 
	"PUBLISHER" VARCHAR2(100 BYTE), 
	"ISBN" VARCHAR2(20 BYTE), 
	"EDITION" VARCHAR2(20 BYTE), 
	"LANGUAGE" VARCHAR2(20 BYTE), 
	"MATERIAL_TYPE" VARCHAR2(20 BYTE), 
	"PAGES" NUMBER, 
	"DESCRIPTION" CLOB, 
	"TOTAL_COPIES" NUMBER, 
	"AVAILABLE_COPIES" NUMBER, 
	"LOCATION" VARCHAR2(100 BYTE), 
	"SHELF_LOCATION" VARCHAR2(50 BYTE), 
	"KEYWORDS" VARCHAR2(200 BYTE), 
	"COVER_IMAGE_URL" VARCHAR2(200 BYTE), 
	"BORROWING_PERIOD" NUMBER, 
	"LATE_FEE" VARCHAR2(20 BYTE), 
	"IS_RESERVED" CHAR(1 BYTE), 
	"FILE_FORMAT" VARCHAR2(50 BYTE), 
	"DOWNLOAD_LIMIT" NUMBER, 
	"TYPE" VARCHAR2(20 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" 
 LOB ("DESCRIPTION") STORE AS BASICFILE (
  TABLESPACE "SYSTEM" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table BORROWED_BOOKS
--------------------------------------------------------

  CREATE TABLE "IM101"."BORROWED_BOOKS" 
   (	"BORROW_ID" NUMBER, 
	"BOOK_ID" NUMBER, 
	"USER_ID" NUMBER, 
	"BORROW_DATE" DATE DEFAULT SYSDATE, 
	"DUE_DATE" DATE, 
	"RETURN_DATE" DATE, 
	"LATE_FEE_ACC" NUMBER, 
	"RENEWS_LEFT" NUMBER, 
	"DAYS_LEFT" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table EQUIPMENT
--------------------------------------------------------

  CREATE TABLE "IM101"."EQUIPMENT" 
   (	"EQUIP_ID" NUMBER, 
	"TYPE" VARCHAR2(50 BYTE), 
	"MODEL" VARCHAR2(100 BYTE), 
	"STATUS" VARCHAR2(20 BYTE) DEFAULT 'AVAILABLE', 
	"BORROWED_UNTIL" DATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table EQUIPMENT_REQUESTS
--------------------------------------------------------

  CREATE TABLE "IM101"."EQUIPMENT_REQUESTS" 
   (	"REQUEST_ID" NUMBER, 
	"USER_ID" NUMBER, 
	"EQUIP_ID" NUMBER, 
	"REQUEST_DATE" DATE DEFAULT SYSDATE, 
	"STATUS" VARCHAR2(20 BYTE) DEFAULT 'PENDING', 
	"PURPOSE" VARCHAR2(200 BYTE), 
	"DURATION" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table LIB_USER
--------------------------------------------------------

  CREATE TABLE "IM101"."LIB_USER" 
   (	"USER_ID" NUMBER, 
	"USERNAME" VARCHAR2(50 BYTE), 
	"PASSWORD_HASH" VARCHAR2(64 BYTE), 
	"ROLE" VARCHAR2(20 BYTE) DEFAULT 'STUDENT', 
	"STUDENT_ID" VARCHAR2(10 BYTE), 
	"CREATED_AT" DATE DEFAULT SYSDATE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table MEETING_ROOMS
--------------------------------------------------------

  CREATE TABLE "IM101"."MEETING_ROOMS" 
   (	"ROOM_ID" NUMBER, 
	"NAME" VARCHAR2(50 BYTE), 
	"CAPACITY" NUMBER
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table NOTIFICATIONS
--------------------------------------------------------

  CREATE TABLE "IM101"."NOTIFICATIONS" 
   (	"NOTIF_ID" NUMBER, 
	"USER_ID" NUMBER, 
	"TYPE" VARCHAR2(20 BYTE), 
	"TITLE" VARCHAR2(200 BYTE), 
	"MESSAGE" CLOB, 
	"STATUS" VARCHAR2(20 BYTE), 
	"NOTIF_DATE" DATE DEFAULT SYSDATE, 
	"IS_READ" CHAR(1 BYTE) DEFAULT 'N'
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" 
 LOB ("MESSAGE") STORE AS BASICFILE (
  TABLESPACE "SYSTEM" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table ROOM_BOOKINGS
--------------------------------------------------------

  CREATE TABLE "IM101"."ROOM_BOOKINGS" 
   (	"BOOKING_ID" NUMBER, 
	"USER_ID" NUMBER, 
	"ROOM_ID" NUMBER, 
	"BOOKING_DATE" DATE, 
	"SLOT_ID" NUMBER, 
	"PURPOSE" VARCHAR2(200 BYTE), 
	"ATTENDEES_COUNT" NUMBER, 
	"STATUS" VARCHAR2(20 BYTE) DEFAULT 'PENDING', 
	"ADDITIONAL_NOTES" CLOB
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" 
 LOB ("ADDITIONAL_NOTES") STORE AS BASICFILE (
  TABLESPACE "SYSTEM" ENABLE STORAGE IN ROW CHUNK 8192 RETENTION 
  NOCACHE LOGGING 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)) ;
--------------------------------------------------------
--  DDL for Table ROOM_BOOKING_ATTENDEES
--------------------------------------------------------

  CREATE TABLE "IM101"."ROOM_BOOKING_ATTENDEES" 
   (	"BOOKING_ID" NUMBER, 
	"STUDENT_ID" VARCHAR2(10 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table STUDENTS
--------------------------------------------------------

  CREATE TABLE "IM101"."STUDENTS" 
   (	"STUDENT_ID" VARCHAR2(10 BYTE), 
	"FIRST_NAME" VARCHAR2(50 BYTE), 
	"LAST_NAME" VARCHAR2(50 BYTE), 
	"EMAIL" VARCHAR2(100 BYTE), 
	"PHONE" VARCHAR2(20 BYTE), 
	"STATUS" VARCHAR2(20 BYTE), 
	"YEAR_LEVEL" NUMBER(1,0), 
	"BRANCH" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Table TIME_SLOTS
--------------------------------------------------------

  CREATE TABLE "IM101"."TIME_SLOTS" 
   (	"SLOT_ID" NUMBER, 
	"SLOT_TIME" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
REM INSERTING into IM101.BOOKS
SET DEFINE OFF;
Insert into IM101.BOOKS (BOOK_ID,TITLE,AUTHOR,PUBLICATION_YEAR,GENRE,PUBLISHER,ISBN,EDITION,LANGUAGE,MATERIAL_TYPE,PAGES,TOTAL_COPIES,AVAILABLE_COPIES,LOCATION,SHELF_LOCATION,KEYWORDS,COVER_IMAGE_URL,BORROWING_PERIOD,LATE_FEE,IS_RESERVED,FILE_FORMAT,DOWNLOAD_LIMIT,TYPE) values (1,'Introduction to Algorithms','Thomas H. Cormen, Charles E. Leiserson, Ronald L. Rivest, Clifford Stein',2009,'Computer Science','MIT Press','978-0262033848','3rd Edition','English','Textbook',1312,5,1,'Main Library','CS-101-A','algorithms,data structures,computer science,programming','https://example.com/book-covers/intro-algorithms.jpg',30,'25.00','N',null,null,'PHYSICAL');
Insert into IM101.BOOKS (BOOK_ID,TITLE,AUTHOR,PUBLICATION_YEAR,GENRE,PUBLISHER,ISBN,EDITION,LANGUAGE,MATERIAL_TYPE,PAGES,TOTAL_COPIES,AVAILABLE_COPIES,LOCATION,SHELF_LOCATION,KEYWORDS,COVER_IMAGE_URL,BORROWING_PERIOD,LATE_FEE,IS_RESERVED,FILE_FORMAT,DOWNLOAD_LIMIT,TYPE) values (2,'Design Patterns','Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides',1994,'Software Engineering','Addison-Wesley','978-0201633610','1st Edition','English','Reference',416,3,0,'Computer Science Building','SE-202-B','design patterns,software engineering,object-oriented,programming','https://example.com/book-covers/design-patterns.jpg',21,'20.00','Y',null,null,'PHYSICAL');
Insert into IM101.BOOKS (BOOK_ID,TITLE,AUTHOR,PUBLICATION_YEAR,GENRE,PUBLISHER,ISBN,EDITION,LANGUAGE,MATERIAL_TYPE,PAGES,TOTAL_COPIES,AVAILABLE_COPIES,LOCATION,SHELF_LOCATION,KEYWORDS,COVER_IMAGE_URL,BORROWING_PERIOD,LATE_FEE,IS_RESERVED,FILE_FORMAT,DOWNLOAD_LIMIT,TYPE) values (3,'Clean Code','Robert C. Martin',2008,'Software Engineering','Prentice Hall','978-0132350884','1st Edition','English','Textbook',464,4,-1,'Engineering Library','SE-105-C','clean code,software engineering,practices,refactoring','https://example.com/book-covers/clean-code.jpg',14,'25.00','N',null,null,'PHYSICAL');
Insert into IM101.BOOKS (BOOK_ID,TITLE,AUTHOR,PUBLICATION_YEAR,GENRE,PUBLISHER,ISBN,EDITION,LANGUAGE,MATERIAL_TYPE,PAGES,TOTAL_COPIES,AVAILABLE_COPIES,LOCATION,SHELF_LOCATION,KEYWORDS,COVER_IMAGE_URL,BORROWING_PERIOD,LATE_FEE,IS_RESERVED,FILE_FORMAT,DOWNLOAD_LIMIT,TYPE) values (4,'Database Systems','Hector Garcia-Molina, Jeffrey D. Ullman, Jennifer Widom',2008,'Computer Science','Pearson','978-0131873254','2nd Edition','English','Textbook',1142,3,1,'Science Library','CS-305-D','database,SQL,data management,information systems','https://example.com/book-covers/database-systems.jpg',30,'20.00','N',null,null,'PHYSICAL');
Insert into IM101.BOOKS (BOOK_ID,TITLE,AUTHOR,PUBLICATION_YEAR,GENRE,PUBLISHER,ISBN,EDITION,LANGUAGE,MATERIAL_TYPE,PAGES,TOTAL_COPIES,AVAILABLE_COPIES,LOCATION,SHELF_LOCATION,KEYWORDS,COVER_IMAGE_URL,BORROWING_PERIOD,LATE_FEE,IS_RESERVED,FILE_FORMAT,DOWNLOAD_LIMIT,TYPE) values (5,'Python Programming for Beginners','John Smith',2020,'Programming','Tech Publishing','978-1234567890','2nd Edition','English','Tutorial',350,null,null,'Digital Library','E-PROG-101','python,programming,beginners,coding,tutorial','https://example.com/book-covers/python-beginners.jpg',21,'0.00','N','PDF, EPUB',3,'EBOOK');
Insert into IM101.BOOKS (BOOK_ID,TITLE,AUTHOR,PUBLICATION_YEAR,GENRE,PUBLISHER,ISBN,EDITION,LANGUAGE,MATERIAL_TYPE,PAGES,TOTAL_COPIES,AVAILABLE_COPIES,LOCATION,SHELF_LOCATION,KEYWORDS,COVER_IMAGE_URL,BORROWING_PERIOD,LATE_FEE,IS_RESERVED,FILE_FORMAT,DOWNLOAD_LIMIT,TYPE) values (6,'Web Development with JavaScript','Sarah Johnson',2021,'Web Development','Frontend Books','978-0987654321','1st Edition','English','Reference',422,null,null,'Digital Library','E-WEB-202','javascript,web development,frontend,programming,react,vue','https://example.com/book-covers/js-web-dev.jpg',21,'0.00','N','PDF, EPUB, MOBI',2,'EBOOK');
REM INSERTING into IM101.BORROWED_BOOKS
SET DEFINE OFF;
Insert into IM101.BORROWED_BOOKS (BORROW_ID,BOOK_ID,USER_ID,BORROW_DATE,DUE_DATE,RETURN_DATE,LATE_FEE_ACC,RENEWS_LEFT,DAYS_LEFT) values (1,1,1,to_date('05/15/2023','MM/DD/RRRR'),to_date('06/15/2023','MM/DD/RRRR'),null,0,2,5);
Insert into IM101.BORROWED_BOOKS (BORROW_ID,BOOK_ID,USER_ID,BORROW_DATE,DUE_DATE,RETURN_DATE,LATE_FEE_ACC,RENEWS_LEFT,DAYS_LEFT) values (2,2,1,to_date('05/20/2023','MM/DD/RRRR'),to_date('06/20/2023','MM/DD/RRRR'),null,0,1,10);
Insert into IM101.BORROWED_BOOKS (BORROW_ID,BOOK_ID,USER_ID,BORROW_DATE,DUE_DATE,RETURN_DATE,LATE_FEE_ACC,RENEWS_LEFT,DAYS_LEFT) values (3,3,1,to_date('04/10/2023','MM/DD/RRRR'),to_date('05/10/2023','MM/DD/RRRR'),null,125,0,-5);
Insert into IM101.BORROWED_BOOKS (BORROW_ID,BOOK_ID,USER_ID,BORROW_DATE,DUE_DATE,RETURN_DATE,LATE_FEE_ACC,RENEWS_LEFT,DAYS_LEFT) values (4,4,1,to_date('04/01/2023','MM/DD/RRRR'),to_date('05/01/2023','MM/DD/RRRR'),to_date('04/28/2023','MM/DD/RRRR'),0,0,0);
Insert into IM101.BORROWED_BOOKS (BORROW_ID,BOOK_ID,USER_ID,BORROW_DATE,DUE_DATE,RETURN_DATE,LATE_FEE_ACC,RENEWS_LEFT,DAYS_LEFT) values (5,5,1,to_date('05/30/2023','MM/DD/RRRR'),to_date('06/30/2023','MM/DD/RRRR'),null,0,2,15);
Insert into IM101.BORROWED_BOOKS (BORROW_ID,BOOK_ID,USER_ID,BORROW_DATE,DUE_DATE,RETURN_DATE,LATE_FEE_ACC,RENEWS_LEFT,DAYS_LEFT) values (6,6,1,to_date('05/25/2023','MM/DD/RRRR'),to_date('06/25/2023','MM/DD/RRRR'),null,0,1,12);
REM INSERTING into IM101.EQUIPMENT
SET DEFINE OFF;
Insert into IM101.EQUIPMENT (EQUIP_ID,TYPE,MODEL,STATUS,BORROWED_UNTIL) values (1,'Laptop','Dell XPS 13','AVAILABLE',null);
Insert into IM101.EQUIPMENT (EQUIP_ID,TYPE,MODEL,STATUS,BORROWED_UNTIL) values (2,'Mouse','Logitech','AVAILABLE',null);
REM INSERTING into IM101.EQUIPMENT_REQUESTS
SET DEFINE OFF;
Insert into IM101.EQUIPMENT_REQUESTS (REQUEST_ID,USER_ID,EQUIP_ID,REQUEST_DATE,STATUS,PURPOSE,DURATION) values (1,1,1,to_date('04/28/2025','MM/DD/RRRR'),'PENDING','CLASSWORK',3);
Insert into IM101.EQUIPMENT_REQUESTS (REQUEST_ID,USER_ID,EQUIP_ID,REQUEST_DATE,STATUS,PURPOSE,DURATION) values (2,1,1,to_date('04/29/2025','MM/DD/RRRR'),'PENDING','classwork',7);
REM INSERTING into IM101.LIB_USER
SET DEFINE OFF;
Insert into IM101.LIB_USER (USER_ID,USERNAME,PASSWORD_HASH,ROLE,STUDENT_ID,CREATED_AT) values (1,'plato.aristotle','qwen123','STUDENT','23-1234',to_date('04/28/2025','MM/DD/RRRR'));
REM INSERTING into IM101.MEETING_ROOMS
SET DEFINE OFF;
Insert into IM101.MEETING_ROOMS (ROOM_ID,NAME,CAPACITY) values (1,'Room 101',10);
Insert into IM101.MEETING_ROOMS (ROOM_ID,NAME,CAPACITY) values (2,'Room 102',10);
Insert into IM101.MEETING_ROOMS (ROOM_ID,NAME,CAPACITY) values (3,'Room 103',10);
Insert into IM101.MEETING_ROOMS (ROOM_ID,NAME,CAPACITY) values (4,'Room 104',10);
REM INSERTING into IM101.NOTIFICATIONS
SET DEFINE OFF;
Insert into IM101.NOTIFICATIONS (NOTIF_ID,USER_ID,TYPE,TITLE,STATUS,NOTIF_DATE,IS_READ) values (1,1,'MEETING_ROOM','Meeting Room Confirmation','APPROVED',to_date('04/28/2025','MM/DD/RRRR'),'N');
Insert into IM101.NOTIFICATIONS (NOTIF_ID,USER_ID,TYPE,TITLE,STATUS,NOTIF_DATE,IS_READ) values (2,1,'EQUIPMENT','Equipment Request Pending','PENDING',to_date('04/28/2025','MM/DD/RRRR'),'N');
Insert into IM101.NOTIFICATIONS (NOTIF_ID,USER_ID,TYPE,TITLE,STATUS,NOTIF_DATE,IS_READ) values (3,1,'BOOK','Overdue Book Return','OVERDUE',to_date('04/28/2025','MM/DD/RRRR'),'N');
Insert into IM101.NOTIFICATIONS (NOTIF_ID,USER_ID,TYPE,TITLE,STATUS,NOTIF_DATE,IS_READ) values (4,1,'EQUIPMENT','Equipment Request Approved','APPROVED',to_date('04/28/2025','MM/DD/RRRR'),'Y');
REM INSERTING into IM101.ROOM_BOOKINGS
SET DEFINE OFF;
Insert into IM101.ROOM_BOOKINGS (BOOKING_ID,USER_ID,ROOM_ID,BOOKING_DATE,SLOT_ID,PURPOSE,ATTENDEES_COUNT,STATUS) values (1,1,1,to_date('06/10/2023','MM/DD/RRRR'),2,'GROUP_STUDY',5,'APPROVED');
Insert into IM101.ROOM_BOOKINGS (BOOKING_ID,USER_ID,ROOM_ID,BOOKING_DATE,SLOT_ID,PURPOSE,ATTENDEES_COUNT,STATUS) values (2,1,1,to_date('04/29/2025','MM/DD/RRRR'),2,'group-study',5,'PENDING');
REM INSERTING into IM101.ROOM_BOOKING_ATTENDEES
SET DEFINE OFF;
Insert into IM101.ROOM_BOOKING_ATTENDEES (BOOKING_ID,STUDENT_ID) values (2,'23-1234');
Insert into IM101.ROOM_BOOKING_ATTENDEES (BOOKING_ID,STUDENT_ID) values (2,'23-4444');
Insert into IM101.ROOM_BOOKING_ATTENDEES (BOOKING_ID,STUDENT_ID) values (2,'23-5523');
Insert into IM101.ROOM_BOOKING_ATTENDEES (BOOKING_ID,STUDENT_ID) values (2,'23-5234');
Insert into IM101.ROOM_BOOKING_ATTENDEES (BOOKING_ID,STUDENT_ID) values (2,'23-5342');
REM INSERTING into IM101.STUDENTS
SET DEFINE OFF;
Insert into IM101.STUDENTS (STUDENT_ID,FIRST_NAME,LAST_NAME,EMAIL,PHONE,STATUS,YEAR_LEVEL,BRANCH) values ('23-1234','Plato','Aristotle','plato.aristotle@campus.edu','+6391234567899','ENROLLED',3,'SAN BARTOLOME');
REM INSERTING into IM101.TIME_SLOTS
SET DEFINE OFF;
Insert into IM101.TIME_SLOTS (SLOT_ID,SLOT_TIME) values (1,'8:00 AM - 9:00 AM');
Insert into IM101.TIME_SLOTS (SLOT_ID,SLOT_TIME) values (2,'9:00 AM - 10:00 AM');
Insert into IM101.TIME_SLOTS (SLOT_ID,SLOT_TIME) values (3,'10:00 AM - 11:00 AM');
Insert into IM101.TIME_SLOTS (SLOT_ID,SLOT_TIME) values (4,'11:00 AM - 12:00 PM');
Insert into IM101.TIME_SLOTS (SLOT_ID,SLOT_TIME) values (5,'12:00 PM - 1:00 PM');
Insert into IM101.TIME_SLOTS (SLOT_ID,SLOT_TIME) values (6,'1:00 PM - 2:00 PM');
Insert into IM101.TIME_SLOTS (SLOT_ID,SLOT_TIME) values (7,'2:00 PM - 3:00 PM');
Insert into IM101.TIME_SLOTS (SLOT_ID,SLOT_TIME) values (8,'3:00 PM - 4:00 PM');
Insert into IM101.TIME_SLOTS (SLOT_ID,SLOT_TIME) values (9,'4:00 PM - 5:00 PM');
Insert into IM101.TIME_SLOTS (SLOT_ID,SLOT_TIME) values (10,'5:00 PM - 6:00 PM');
--------------------------------------------------------
--  DDL for Index IDX_ROOM_BOOKING_STUDENT
--------------------------------------------------------

  CREATE INDEX "IM101"."IDX_ROOM_BOOKING_STUDENT" ON "IM101"."ROOM_BOOKING_ATTENDEES" ("STUDENT_ID") 
  PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;
--------------------------------------------------------
--  DDL for Trigger BOOKS_BI_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "IM101"."BOOKS_BI_TRG" 
BEFORE INSERT ON BOOKS
FOR EACH ROW
 WHEN (NEW.BOOK_ID IS NULL) BEGIN
  SELECT BOOK_SEQ.NEXTVAL INTO :NEW.BOOK_ID FROM DUAL;
END;

/
ALTER TRIGGER "IM101"."BOOKS_BI_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger BORROWED_BOOKS_BI_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "IM101"."BORROWED_BOOKS_BI_TRG" 
BEFORE INSERT ON BORROWED_BOOKS
FOR EACH ROW
 WHEN (NEW.BORROW_ID IS NULL) BEGIN
  SELECT BORROW_SEQ.NEXTVAL INTO :NEW.BORROW_ID FROM DUAL;
END;

/
ALTER TRIGGER "IM101"."BORROWED_BOOKS_BI_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger EQUIPMENT_BI_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "IM101"."EQUIPMENT_BI_TRG" 
BEFORE INSERT ON EQUIPMENT
FOR EACH ROW
 WHEN (NEW.EQUIP_ID IS NULL) BEGIN
  SELECT EQUIP_SEQ.NEXTVAL INTO :NEW.EQUIP_ID FROM DUAL;
END;

/
ALTER TRIGGER "IM101"."EQUIPMENT_BI_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger EQUIP_REQ_BI_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "IM101"."EQUIP_REQ_BI_TRG" 
BEFORE INSERT ON EQUIPMENT_REQUESTS
FOR EACH ROW
 WHEN (NEW.REQUEST_ID IS NULL) BEGIN
  SELECT REQ_SEQ.NEXTVAL INTO :NEW.REQUEST_ID FROM DUAL;
END;

/
ALTER TRIGGER "IM101"."EQUIP_REQ_BI_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger LIB_USER_BI_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "IM101"."LIB_USER_BI_TRG" 
BEFORE INSERT ON LIB_USER
FOR EACH ROW
 WHEN (NEW.USER_ID IS NULL) BEGIN
  SELECT LIB_USER_SEQ.NEXTVAL INTO :NEW.USER_ID FROM DUAL;
END;

/
ALTER TRIGGER "IM101"."LIB_USER_BI_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger MEETING_ROOMS_BI_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "IM101"."MEETING_ROOMS_BI_TRG" 
BEFORE INSERT ON MEETING_ROOMS
FOR EACH ROW
 WHEN (NEW.ROOM_ID IS NULL) BEGIN
  SELECT ROOM_SEQ.NEXTVAL INTO :NEW.ROOM_ID FROM DUAL;
END;

/
ALTER TRIGGER "IM101"."MEETING_ROOMS_BI_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger NOTIFICATIONS_BI_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "IM101"."NOTIFICATIONS_BI_TRG" 
BEFORE INSERT ON NOTIFICATIONS
FOR EACH ROW
 WHEN (NEW.NOTIF_ID IS NULL) BEGIN
  SELECT NOTIF_SEQ.NEXTVAL INTO :NEW.NOTIF_ID FROM DUAL;
END;

/
ALTER TRIGGER "IM101"."NOTIFICATIONS_BI_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger ROOM_BOOKINGS_BI_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "IM101"."ROOM_BOOKINGS_BI_TRG" 
BEFORE INSERT ON ROOM_BOOKINGS
FOR EACH ROW
 WHEN (NEW.BOOKING_ID IS NULL) BEGIN
  SELECT BOOKING_SEQ.NEXTVAL INTO :NEW.BOOKING_ID FROM DUAL;
END;

/
ALTER TRIGGER "IM101"."ROOM_BOOKINGS_BI_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TIME_SLOTS_BI_TRG
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "IM101"."TIME_SLOTS_BI_TRG" 
BEFORE INSERT ON TIME_SLOTS
FOR EACH ROW
 WHEN (NEW.SLOT_ID IS NULL) BEGIN
  SELECT SLOT_SEQ.NEXTVAL INTO :NEW.SLOT_ID FROM DUAL;
END;

/
ALTER TRIGGER "IM101"."TIME_SLOTS_BI_TRG" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_AFTER_BORROW_INSERT
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "IM101"."TRG_AFTER_BORROW_INSERT" 
AFTER INSERT ON BORROWED_BOOKS
FOR EACH ROW
BEGIN
  UPDATE BOOKS
    SET AVAILABLE_COPIES = AVAILABLE_COPIES - 1
  WHERE BOOK_ID = :NEW.BOOK_ID;
END;

/
ALTER TRIGGER "IM101"."TRG_AFTER_BORROW_INSERT" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_AFTER_EQUIP_REQ_UPDATE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "IM101"."TRG_AFTER_EQUIP_REQ_UPDATE" 
AFTER UPDATE OF STATUS ON EQUIPMENT_REQUESTS
FOR EACH ROW
BEGIN
  IF :NEW.STATUS = 'APPROVED' THEN
    UPDATE EQUIPMENT
      SET STATUS = 'BORROWED', BORROWED_UNTIL = SYSDATE + :NEW.DURATION
    WHERE EQUIP_ID = :NEW.EQUIP_ID;
  ELSIF :NEW.STATUS IN ('RETURNED','CANCELLED') THEN
    UPDATE EQUIPMENT
      SET STATUS = 'AVAILABLE', BORROWED_UNTIL = NULL
    WHERE EQUIP_ID = :NEW.EQUIP_ID;
  END IF;
END;

/
ALTER TRIGGER "IM101"."TRG_AFTER_EQUIP_REQ_UPDATE" ENABLE;
--------------------------------------------------------
--  DDL for Trigger TRG_AFTER_RETURN_UPDATE
--------------------------------------------------------

  CREATE OR REPLACE TRIGGER "IM101"."TRG_AFTER_RETURN_UPDATE" 
AFTER UPDATE OF RETURN_DATE ON BORROWED_BOOKS
FOR EACH ROW
 WHEN (NEW.RETURN_DATE IS NOT NULL AND OLD.RETURN_DATE IS NULL) BEGIN
  UPDATE BOOKS
    SET AVAILABLE_COPIES = AVAILABLE_COPIES + 1
  WHERE BOOK_ID = :NEW.BOOK_ID;
END;

/
ALTER TRIGGER "IM101"."TRG_AFTER_RETURN_UPDATE" ENABLE;
--------------------------------------------------------
--  DDL for Procedure ADD_NOTIFICATION
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "IM101"."ADD_NOTIFICATION" (
  P_USER_ID   IN NUMBER,
  P_TYPE      IN VARCHAR2,
  P_TITLE     IN VARCHAR2,
  P_MESSAGE   IN CLOB,
  P_STATUS    IN VARCHAR2 DEFAULT 'INFO'
) AS
BEGIN
  INSERT INTO NOTIFICATIONS(USER_ID,TYPE,TITLE,MESSAGE,STATUS)
    VALUES(P_USER_ID,P_TYPE,P_TITLE,P_MESSAGE,P_STATUS);
  COMMIT;
END;

/
--------------------------------------------------------
--  DDL for Procedure BORROW_BOOK
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "IM101"."BORROW_BOOK" (
  P_USER_ID IN NUMBER,
  P_BOOK_ID IN NUMBER
) AS
  V_PERIOD NUMBER;
  V_DUE    DATE;
BEGIN
  SELECT BORROWING_PERIOD INTO V_PERIOD
    FROM BOOKS WHERE BOOK_ID = P_BOOK_ID;
  V_DUE := SYSDATE + V_PERIOD;
  INSERT INTO BORROWED_BOOKS(BOOK_ID,USER_ID,BORROW_DATE,DUE_DATE)
    VALUES(P_BOOK_ID,P_USER_ID,SYSDATE,V_DUE);
  COMMIT;
END;

/
--------------------------------------------------------
--  DDL for Procedure CANCEL_EQUIP_REQUEST
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "IM101"."CANCEL_EQUIP_REQUEST" (
  P_REQUEST_ID IN NUMBER
) AS
BEGIN
  UPDATE EQUIPMENT_REQUESTS
    SET STATUS = 'CANCELLED'
  WHERE REQUEST_ID = P_REQUEST_ID;
  COMMIT;
END;

/
--------------------------------------------------------
--  DDL for Procedure CANCEL_ROOM_BOOKING
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "IM101"."CANCEL_ROOM_BOOKING" (
  P_BOOKING_ID IN NUMBER
) AS
BEGIN
  UPDATE ROOM_BOOKINGS
    SET STATUS = 'CANCELLED'
  WHERE BOOKING_ID = P_BOOKING_ID;
  COMMIT;
END;

/
--------------------------------------------------------
--  DDL for Procedure CREATE_USER
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "IM101"."CREATE_USER" (
  P_USERNAME      IN VARCHAR2,
  P_PASSWORD_HASH IN VARCHAR2,
  P_ROLE          IN VARCHAR2 DEFAULT 'STUDENT',
  P_STUDENT_ID    IN VARCHAR2
) AS
BEGIN
  INSERT INTO LIB_USER (USERNAME, PASSWORD_HASH, ROLE, STUDENT_ID)
    VALUES (P_USERNAME, P_PASSWORD_HASH, P_ROLE, P_STUDENT_ID);
  COMMIT;
END CREATE_USER;

/
--------------------------------------------------------
--  DDL for Procedure REQUEST_EQUIPMENT
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "IM101"."REQUEST_EQUIPMENT" (
  P_USER_ID   IN NUMBER,
  P_EQUIP_ID  IN NUMBER,
  P_PURPOSE   IN VARCHAR2,
  P_DURATION  IN NUMBER
) AS
BEGIN
  INSERT INTO EQUIPMENT_REQUESTS(USER_ID,EQUIP_ID,PURPOSE,DURATION)
    VALUES(P_USER_ID,P_EQUIP_ID,P_PURPOSE,P_DURATION);
  COMMIT;
END;

/
--------------------------------------------------------
--  DDL for Procedure RESERVE_ROOM
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "IM101"."RESERVE_ROOM" (
  P_USER_ID       IN NUMBER,
  P_ROOM_ID       IN NUMBER,
  P_BOOK_DATE     IN DATE,
  P_SLOT_ID       IN NUMBER,
  P_PURPOSE       IN VARCHAR2,
  P_ATTENDEES_CNT IN NUMBER
) AS
BEGIN
  INSERT INTO ROOM_BOOKINGS(USER_ID,ROOM_ID,BOOKING_DATE,SLOT_ID,PURPOSE,ATTENDEES_COUNT)
    VALUES(P_USER_ID,P_ROOM_ID,P_BOOK_DATE,P_SLOT_ID,P_PURPOSE,P_ATTENDEES_CNT);
  COMMIT;
END;

/
--------------------------------------------------------
--  DDL for Procedure RETURN_BOOK
--------------------------------------------------------
set define off;

  CREATE OR REPLACE PROCEDURE "IM101"."RETURN_BOOK" (
  P_BORROW_ID IN NUMBER
) AS
  V_BOOK_ID NUMBER;
BEGIN
  UPDATE BORROWED_BOOKS
    SET RETURN_DATE = SYSDATE
  WHERE BORROW_ID = P_BORROW_ID;
  COMMIT;
END;

/
--------------------------------------------------------
--  Constraints for Table NOTIFICATIONS
--------------------------------------------------------

  ALTER TABLE "IM101"."NOTIFICATIONS" ADD PRIMARY KEY ("NOTIF_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "IM101"."NOTIFICATIONS" ADD CHECK (IS_READ IN ('Y','N')) ENABLE;
--------------------------------------------------------
--  Constraints for Table MEETING_ROOMS
--------------------------------------------------------

  ALTER TABLE "IM101"."MEETING_ROOMS" ADD PRIMARY KEY ("ROOM_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table STUDENTS
--------------------------------------------------------

  ALTER TABLE "IM101"."STUDENTS" ADD PRIMARY KEY ("STUDENT_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "IM101"."STUDENTS" MODIFY ("EMAIL" NOT NULL ENABLE);
  ALTER TABLE "IM101"."STUDENTS" MODIFY ("LAST_NAME" NOT NULL ENABLE);
  ALTER TABLE "IM101"."STUDENTS" MODIFY ("FIRST_NAME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table TIME_SLOTS
--------------------------------------------------------

  ALTER TABLE "IM101"."TIME_SLOTS" ADD PRIMARY KEY ("SLOT_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "IM101"."TIME_SLOTS" MODIFY ("SLOT_TIME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table BORROWED_BOOKS
--------------------------------------------------------

  ALTER TABLE "IM101"."BORROWED_BOOKS" ADD PRIMARY KEY ("BORROW_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Constraints for Table ROOM_BOOKINGS
--------------------------------------------------------

  ALTER TABLE "IM101"."ROOM_BOOKINGS" ADD PRIMARY KEY ("BOOKING_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "IM101"."ROOM_BOOKINGS" MODIFY ("BOOKING_DATE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table LIB_USER
--------------------------------------------------------

  ALTER TABLE "IM101"."LIB_USER" ADD UNIQUE ("USERNAME")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "IM101"."LIB_USER" ADD PRIMARY KEY ("USER_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "IM101"."LIB_USER" MODIFY ("CREATED_AT" NOT NULL ENABLE);
  ALTER TABLE "IM101"."LIB_USER" MODIFY ("ROLE" NOT NULL ENABLE);
  ALTER TABLE "IM101"."LIB_USER" MODIFY ("PASSWORD_HASH" NOT NULL ENABLE);
  ALTER TABLE "IM101"."LIB_USER" MODIFY ("USERNAME" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table BOOKS
--------------------------------------------------------

  ALTER TABLE "IM101"."BOOKS" ADD PRIMARY KEY ("BOOK_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "IM101"."BOOKS" ADD CHECK (TYPE IN ('PHYSICAL','EBOOK')) ENABLE;
  ALTER TABLE "IM101"."BOOKS" ADD CHECK (IS_RESERVED IN ('Y','N')) ENABLE;
  ALTER TABLE "IM101"."BOOKS" MODIFY ("TITLE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table ROOM_BOOKING_ATTENDEES
--------------------------------------------------------

  ALTER TABLE "IM101"."ROOM_BOOKING_ATTENDEES" ADD PRIMARY KEY ("BOOKING_ID", "STUDENT_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "IM101"."ROOM_BOOKING_ATTENDEES" MODIFY ("STUDENT_ID" NOT NULL ENABLE);
  ALTER TABLE "IM101"."ROOM_BOOKING_ATTENDEES" MODIFY ("BOOKING_ID" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table EQUIPMENT
--------------------------------------------------------

  ALTER TABLE "IM101"."EQUIPMENT" ADD PRIMARY KEY ("EQUIP_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
  ALTER TABLE "IM101"."EQUIPMENT" MODIFY ("TYPE" NOT NULL ENABLE);
--------------------------------------------------------
--  Constraints for Table EQUIPMENT_REQUESTS
--------------------------------------------------------

  ALTER TABLE "IM101"."EQUIPMENT_REQUESTS" ADD PRIMARY KEY ("REQUEST_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table BORROWED_BOOKS
--------------------------------------------------------

  ALTER TABLE "IM101"."BORROWED_BOOKS" ADD FOREIGN KEY ("BOOK_ID")
	  REFERENCES "IM101"."BOOKS" ("BOOK_ID") ENABLE;
  ALTER TABLE "IM101"."BORROWED_BOOKS" ADD FOREIGN KEY ("USER_ID")
	  REFERENCES "IM101"."LIB_USER" ("USER_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table EQUIPMENT_REQUESTS
--------------------------------------------------------

  ALTER TABLE "IM101"."EQUIPMENT_REQUESTS" ADD FOREIGN KEY ("USER_ID")
	  REFERENCES "IM101"."LIB_USER" ("USER_ID") ENABLE;
  ALTER TABLE "IM101"."EQUIPMENT_REQUESTS" ADD FOREIGN KEY ("EQUIP_ID")
	  REFERENCES "IM101"."EQUIPMENT" ("EQUIP_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table NOTIFICATIONS
--------------------------------------------------------

  ALTER TABLE "IM101"."NOTIFICATIONS" ADD FOREIGN KEY ("USER_ID")
	  REFERENCES "IM101"."LIB_USER" ("USER_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ROOM_BOOKINGS
--------------------------------------------------------

  ALTER TABLE "IM101"."ROOM_BOOKINGS" ADD FOREIGN KEY ("USER_ID")
	  REFERENCES "IM101"."LIB_USER" ("USER_ID") ENABLE;
  ALTER TABLE "IM101"."ROOM_BOOKINGS" ADD FOREIGN KEY ("ROOM_ID")
	  REFERENCES "IM101"."MEETING_ROOMS" ("ROOM_ID") ENABLE;
  ALTER TABLE "IM101"."ROOM_BOOKINGS" ADD FOREIGN KEY ("SLOT_ID")
	  REFERENCES "IM101"."TIME_SLOTS" ("SLOT_ID") ENABLE;
--------------------------------------------------------
--  Ref Constraints for Table ROOM_BOOKING_ATTENDEES
--------------------------------------------------------

  ALTER TABLE "IM101"."ROOM_BOOKING_ATTENDEES" ADD FOREIGN KEY ("BOOKING_ID")
	  REFERENCES "IM101"."ROOM_BOOKINGS" ("BOOKING_ID") ENABLE;
